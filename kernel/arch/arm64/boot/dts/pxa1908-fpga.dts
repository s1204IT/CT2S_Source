/*
 *  Copyright (C) 2012 Marvell Technology Group Ltd.
 *  Author: Haojian Zhuang <haojian.zhuang@marvell.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  publishhed by the Free Software Foundation.
 */

/dts-v1/;
/memreserve/ 0x09000000 0x01000000;	/* ION (16MB)*/
/memreserve/ 0x17000000 0x01800000;	/* Frame buffer (24MB) */
/memreserve/ 0x08100000 0x00040000;	/* ramoops buffer (256KB) */
#include "pxa1908.dtsi"
#include <dt-bindings/mmc/pxa_sdhci.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "Marvell PXA1908 DKB Development Board";
	compatible = "mrvl,pxa1908-fpga", "mrvl,pxa1908";

	chosen {
		bootargs = "console=ttyS0,115200 root=/dev/nfs nfsroot=192.168.1.100:/nfsroot/ ip=192.168.1.101:192.168.1.100::255.255.255.0::eth0:on";
	};

	memory {
		reg = <0 0x00000000 0x10000000>;
	};

	gic: interrupt-controller@d1dfa000 {
		status = "okay";
	};

	timer {
		status = "okay";
	};

	pmu {
		status = "okay";
	};

	soc {
		clock: clock-controller {
			status = "okay";
		};

		smmu {  /* iommu in vpu */
			status = "okay";
		};

		ddr@c0100000 {  /* DDR memory controller */
			status = "okay";
		};

		axi@d4200000 {	/* AXI */
			coda7542: coda7542@d420d000 {
				marvell,sram-internal = <0>;
				marvell,nv21_support = <1>;
				status = "okay";
			};

			intc: wakeupgen@d4282000 {
				status = "okay";
			};

			usbphy: usbphy@d4207000 {
				status = "disabled";
			};

			udc: udc@d4208100 {
				status = "okay";
			};

			ehci: ehci@d4208100 {
				status = "okay";
			};

			otg: otg@d4208100 {
				status = "okay";
			};

			dsi: dsi@d420b800 {
				marvell,phy-name = "mmp_dsi1";
				marvell,plat-path-name = "mmp_pnpath";
				marvell,dsi-lanes = <4>;
				marvell,burst-mode = <2>;
				marvell,hbp-en;
				status = "okay";
			};

			vdma: vdma@d4209000 {
				marvell,vdma-num = <1>;
				marvell,vdma-axi = <1>;
				status = "okay";
				vdma1 {
					marvell,vdma-id = <0>;
					marvell,sram-size = <15360>;
					marvell,is_vid = <0>;
				};
			};

			disp: disp@d420b000 {
				pinctrl-names = "default";
				pinctrl-0 = <&disp_func>;
				marvell,disp-name = "disp_name";
				marvell,path-num = <1>;
				status = "okay";
				path1 {
					marvell,path-name = "mmp_pnpath";
					marvell,overlay-num = <1>;
					marvell,overlay-table = <1>;
					marvell,output-type = <1>;
					marvell,path-config = <0x10>;
					marvell,link-config = <0x1>;
					720p {
						disp1_clksrc = "pll1_832m";
						disp2_clksrc = "pll2_div3";
						disp3_clksrc = "pll3p";
						dsipll_clksrc = "pll4";
						pn_sclk_clksrc = "disp1";
					};
				};
			};

			fb0: fbbase {
				marvell,fb-name = "mmp-fb";
				marvell,path-name = "mmp_pnpath";
				marvell,overlay-id = <1>;
				marvell,default-pixfmt = <0x109>;
				marvell,buffer-num = <3>;
				marvell,fb-mem = <0x17000000>;
				status = "okay";
			};

			/* eMMC */
			sdh3: sdh@d4281000 {
				pinctrl-names = "default", "fast";
				pinctrl-0 = <&sdh3_pmx_func1 &sdh3_pmx_func2>;
				pinctrl-1 = <&sdh3_pmx_func1_fast &sdh3_pmx_func2_fast>;
				bus-width = <8>;
				non-removable;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-quirks = <(
						SDHCI_QUIRK_BROKEN_ADMA |
						SDHCI_QUIRK_BROKEN_CARD_DETECTION
						)>;
				marvell,sdh-quirks2 = <(
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-host-caps = <(MMC_CAP_1_8V_DDR)>;
				marvell,sdh-host-caps2 = <(MMC_CAP2_DISABLE_BLK_ASYNC)>;
				marvell,sdh-flags = <(
						PXA_FLAG_SD_8_BIT_CAPABLE_SLOT |
						PXA_FLAG_ENABLE_CLOCK_GATING |
						PXA_FLAG_TX_SEL_BUS_CLK
					      )>;
		/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_MMC_HS PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_104M 0 0 0 0 0>;
				status = "okay";
			};

			/* SD card */
			sdh1: sdh@d4280000 {
				pinctrl-names = "default", "fast";
				pinctrl-0 = <&sdh1_pmx_func1 &sdh1_pmx_func2 &sdh1_pmx_func3>;
				pinctrl-1 = <&sdh1_pmx_func1 &sdh1_pmx_func2_fast &sdh1_pmx_func3_fast>;
				vqmmc-supply	= <&ldo5>;
				vmmc-supply	= <&ldo4>;
				cd-gpios = <&gpio 91 0>;
				cd-inverted;
				bus-width = <4>;
				wp-inverted;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-host-caps-disable = <(MMC_CAP_UHS_SDR104)>;
				marvell,sdh-quirks = <(
						SDHCI_QUIRK_INVERTED_WRITE_PROTECT |
						SDHCI_QUIRK_BROKEN_CARD_DETECTION
						)>;
				marvell,sdh-quirks2 = <(
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-flags = <(
						PXA_FLAG_TX_SEL_BUS_CLK |
						PXA_FLAG_ENABLE_CLOCK_GATING
					      )>;
		/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_SD_HS PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_104M 0 0 0 0 0>;
				status = "okay";
			};

			/* SDIO */
			sdh2: sdh@d4280800 {
				pinctrl-names = "default", "fast", "sleep";
				pinctrl-0 = <&sdh2_pmx_func1 &sdh2_pmx_func2 &sdh2_pmx_func3 &sdh2_pmx_func4>;
				pinctrl-1 = <&sdh2_pmx_func1_fast &sdh2_pmx_func2_fast &sdh2_pmx_func3 &sdh2_pmx_func4>;
				pinctrl-2 = <&sdh2_pmx_edge_wakeup>;
				bus-width = <4>;
				marvell,sdh-pm-runtime-en;
				marvell,sdh-host-caps-disable = <(MMC_CAP_UHS_SDR104 | MMC_CAP_UHS_SDR50)>;
				marvell,sdh-quirks = <(SDHCI_QUIRK_BROKEN_CARD_DETECTION)>;
				marvell,sdh-quirks2 = <(SDHCI_QUIRK2_HOLDSUSPEND_AFTER_REQUEST |
						SDHCI_QUIRK2_FAKE_SDIO_IRQ_IN_UHS |
						SDHCI_QUIRK2_TUNING_ADMA_BROKEN |
						SDHCI_QUIRK2_BASE_CLOCK_ALWAYS_ON |
						SDHCI_QUIRK2_MANUAL_CARD_DETECT |
						SDHCI_QUIRK2_TIMEOUT_SHORT
						)>;
				marvell,sdh-pm-caps = <(MMC_PM_KEEP_POWER)>;
				marvell,sdh-host-caps2 = <(MMC_CAP2_NO_VOLTAGE_SWITCH)>;
				marvell,sdh-flags = <(
						PXA_FLAG_WAKEUP_HOST |
						PXA_FLAG_TX_SEL_BUS_CLK |
						PXA_FLAG_EN_PM_RUNTIME |
						PXA_FLAG_DISABLE_PROBE_CDSCAN
					      )>;
		/* prop "sdh-dtr-data": <timing preset_rate src_rate tx_delay rx_delay sdclk_sel0 sdclk_sel1 fakeclk_en> */
				marvell,sdh-dtr-data = <PXA_MMC_TIMING_LEGACY PXA_SDH_DTR_26M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_SD_HS PXA_SDH_DTR_45M PXA_SDH_DTR_89M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_DDR50 PXA_SDH_DTR_52M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_SDR50 PXA_SDH_DTR_104M PXA_SDH_DTR_104M 0 0 0 0 0>,
						<PXA_MMC_TIMING_UHS_SDR104 PXA_SDH_DTR_208M PXA_SDH_DTR_208M 600 0 0 0 1>,
						<PXA_MMC_TIMING_MAX PXA_SDH_DTR_PS_NONE PXA_SDH_DTR_89M 0 0 0 0 0>;
				status = "okay";
			};

			ccic1: ccic@d420a000 {
			   pinctrl-names = "default";
			   pinctrl-0 = <&ccic1_pmx_func1 &ccic1_pmx_func2>;
			   interrupts = <0 42 0x4>;
			   status = "disabled";
			};

			ccic2: ccic@d420a800 {
			   pinctrl-names = "default";
			   pinctrl-0 = <&ccic2_pmx_func1 &ccic2_pmx_func2>;
			   interrupts = <0 77 0x4>;
			   status = "disabled";
			};

			sc2mmu1: sc2mmu@d420F000 {
				interrupts = <0 15 0x4>;
				status = "disabled";
			};

			b52isp: b52isp@0xC0200000 {
				interrupts = <0 11 0x4>;
				status = "disabled";
			};

			vpu-devfreq {
				status = "okay";
			};

			asram: asram@d12a0000 {
				status = "okay";
			};

			adma0: adma@d128d800 {
				status = "okay";
			};
		};

		apb@d4000000 {
			pdma0: pdma@d4000000 {
				status = "okay";
			};

			timer2: timer@d401f000 {
				status = "okay";
			};

			uart2: uart@d4017000 {
				pinctrl-names = "default", "sleep";
				pinctrl-0 = <&uart2_pmx_func1 &uart2_pmx_func2>;
				pinctrl-1 = <&uart2_pmx_func1_sleep &uart2_pmx_func2>;
				edge-wakeup-gpio = <47>; /* GPIO47: UART rx pin */
				status = "okay";
			};

			uart3: uart@d4018000 {
				pinctrl-names = "default";
				pinctrl-0 = <&uart3_pmx_func>;
				status = "okay";
			};

			mfpr: mfpr@d401e000 {
				pinctrl-names = "default";
				reg = <0xd401e000 0x280>;
				pinctrl-0 = <&mfp_pins_group_0 &mfp_pins_group_1 &mfp_pins_group_2>;
				status = "ok";
			};

			edgewakeup: edgewakeup@d4019800 {
				status = "okay";
			};

			rtc: rtc@d4010000 {
				status = "okay";
			};

			thermal: thermal@d4013300 {
				status = "okay";
			};

			watchdog: watchdog@d4080000 {
				status = "disabled";
			};

			keypad: keypad@d4012000 {
				marvell,direct-keys;
				marvell,direct-key-low-active;
				marvell,keypad-lpm-mod;
				marvell,direct-key-count = <2>;
				marvell,direct-key-mask = <0xff>;
				marvell,direct-key-map = < 0x73
							   0x72>;
				marvell,debounce-interval = <30>;
				pinctrl-names = "default";
				pinctrl-0 = <&keypad_in_func>;
				status = "okay";
			};

			keyreset {
				compatible = "marvell,keyreset";
				keys-down = <0x73 0x72>;
				keyreset-need-panic;
			};

			spi_1: spi@d401b000 {
					port = <&ssp0>;
					status = "okay";
					pinctrl-names = "default";
					pinctrl-0 = <&spi1_pmx_func>;
					#address-cells = <1>;
					#size-cells = <0>;
					cmmb_if {
						compatible = "cmmb_if";
						reg = <0x0 0x0>;
						bus_num = <1>;
						mode = <0x0>;
						spi-max-frequency = <8000000>;
					};
			};

			ssp0: ssp@d401b000 {
				status = "okay";
			};

			ssp4: ssp@d4039000 {
				status = "okay";
			};

			ssp_dai4: pxa-ssp-dai@4 {
				compatible = "mrvl,pxa-ssp-dai";
				reg = <0x4 0x0>;
				port = <&ssp4>;
				pinctrl-names = "default","ssp";
				pinctrl-0 = <&gssp_gpio>;
				pinctrl-1 = <&gssp_func>;
				ssp-gpio = <&gpio 25 0 &gpio 26 0 &gpio 27 0 &gpio 28 0>;
				dmas = <&pdma0 6 0
					&pdma0 7 0>;
				dma-names = "rx", "tx";
				platform_driver_name = "pdma_platform";
				burst_size = <8>;
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <131072>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <131072>;
			};

			/* SSPA port 0 */
			sspa0: sspa@d128dc00 {
				pinctrl-names = "default";
				pinctrl-0 = <&sspa0_func>;
				playback_period_bytes = <4096>;
				playback_buffer_bytes = <16384>;
				capture_period_bytes = <4096>;
				capture_buffer_bytes = <12288>;
				burst_size = <4>;
				#dailink-cells = <1>;
				status = "okay";
			};

			map: map@d1200000 {
				marvell,apll = <1>;
				status = "okay";
				mmp_map_codec: mmp_map_codec {
					compatible = "marvell,mmp-map-codec";
					#dailink-cells = <1>;
				};
				mmp_map_be: mmp_map_be {
					compatible = "marvell,mmp-map-be";
					#dailink-cells = <1>;
				};
				mmp_map_be_tdm: mmp_map_be_tdm {
					compatible = "marvell,mmp-map-be-tdm";
					marvell,single-out;
					#dailink-cells = <1>;
				};
			};

			gpio: gpio@d4019000 {
				status = "okay";
				/*
				 * In theorical, some gpios could be routed to
				 * multiple pins. So define the gpio-ranges in
				 * board file, not silicon file.
				 */
				gcb0: gpio@d4019000 {
					/* gpio offset, pin offset, nr pins */
					gpio-ranges = <&pmx 0 55 32>;
				};
				gcb1: gpio@d4019004 {
					gpio-ranges = <&pmx 0 87 23>;
				};
				gcb2: gpio@d4019008 {
					gpio-ranges = <&pmx 3 110 29>;
				};
				gcb3: gpio@d4019100 {
					gpio-ranges = <&pmx 0 139 3  &pmx 28 52 1>;
				};
			};
			pmx: pinmux@d401e000 {
				status = "okay";

				/* pin base, nr pins & gpio function */
				pinctrl-single,gpio-range = <
					/*
					 * GPIO number is hardcoded for range at here.
					 * In gpio chip, GPIO number is not hardcoded for range.
					 * Since one gpio pin may be routed to multiple pins,
					 * define these gpio range in pxa910-dkb.dts not pxa910.dtsi.
					 */
					&range 55 55 0	/* GPIO0 ~ GPIO54 */
					&range 110 32 0 /* GPIO67 ~ GPIO98 */
					&range 52 1 0	/* GPIO124 */
				>;

				/* MFP_PULL_HIGH | MFP_LPM_FLOAT */
				mfp_pins_group_0: mfp_pins_group_0 {
					pinctrl-single,pins = <
						PRI_TDO AF0
						DF_RDY0 AF1
						DF_RDY1 AF1
						DF_nCS0_SM_nCS2 AF1
						PA_MODE AF6
						RF_CONF_4 AF6
						SM_ADVMUX AF1
					>;
					MFP_LPM_PULL_UP;
				};

				mfp_pins_group_1: mfp_pins_group_1 {
					pinctrl-single,pins = <
						DF_IO8 AF0
						DF_IO9 AF0
						GPIO76 AF0
					>;
					MFP_LPM_PULL_DW;
				};

				/* CP UART Rx and Tx */
				mfp_pins_group_2: mfp_pins_group_2 {
					pinctrl-single,pins = <
						GPIO43 AF7
						GPIO44 AF7
					>;
					MFP_DEFAULT;
				};

				/* MFP_DEFAULT */
				sdh1_pmx_func1: sdh1_pmx_func1 {
					pinctrl-single,pins = <
						MMC1_DAT7 AF1
						MMC1_DAT6 AF1
						MMC1_DAT5 AF1
						MMC1_DAT4 AF1
						MMC1_WP AF1
						MMC1_CD AF1 /* Above pins not used by sdh1, configured as GPIO */
						GPIO91 AF0 /* GPIO91, used for sd card detect */
					>;
					MFP_DEFAULT;
				};

				/* no pull, no LPM */
				sdh1_pmx_func2: sdh1_pmx_func2 {
					pinctrl-single,pins = <
						MMC1_DAT3 AF0
						MMC1_DAT2 AF0
						MMC1_DAT1 AF0
						MMC1_DAT0 AF0
						MMC1_CMD AF0
					>;
					MFP_DEFAULT;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh1_pmx_func3: sdh1_pmx_func3 {
					pinctrl-single,pins = <
						MMC1_CLK AF0
					>;
					MFP_LPM_DRIVE_LOW;
				};

				/* ds fast, no pull, no LPM */
				sdh1_pmx_func2_fast: sdh1_pmx_func2_fast {
					pinctrl-single,pins = <
						MMC1_DAT3 AF0
						MMC1_DAT2 AF0
						MMC1_DAT1 AF0
						MMC1_DAT0 AF0
						MMC1_CMD AF0
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				/* ds fast, LPM_DRIVE_LOW */
				sdh1_pmx_func3_fast: sdh1_pmx_func3_fast {
					pinctrl-single,pins = <
						MMC1_CLK AF0
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh2_pmx_func1_fast: sdh2_pmx_func1_fast {
						pinctrl-single,pins = <
							GPIO37 AF1
							GPIO38 AF1
							GPIO39 AF1
							GPIO40 AF1
							GPIO41 AF1
						>;
						DS_FAST;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				sdh2_pmx_func2_fast: sdh2_pmx_func2_fast {
						pinctrl-single,pins = <
							GPIO42 AF1
						>;
						DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh2_pmx_func1: sdh2_pmx_func1 {
						pinctrl-single,pins = <
							GPIO37 AF1
							GPIO38 AF1
							GPIO39 AF1
							GPIO40 AF1
							GPIO41 AF1
						>;
						MFP_DEFAULT;
				};

				sdh2_pmx_func2: sdh2_pmx_func2 {
						pinctrl-single,pins = <
							GPIO42 AF1
						>;
						DS_SLOW0;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				sdh2_pmx_func3: sdh2_pmx_func3 {
						pinctrl-single,pins = <
							GPIO7 AF0
							GPIO71 AF0
							GPIO20 AF0 /* WIB_3V3_EN */
						>;
						DS_MEDIUM;PULL_FLOAT;EDGE_NONE;LPM_NONE;
				};

				sdh2_pmx_func4: sdh2_pmx_func4 {
						pinctrl-single,pins = <
							GPIO8 AF0
							GPIO5 AF0
						>;
						DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_NONE;
				};

				sdh2_pmx_edge_wakeup: sdh2_pmx_edge_wakeup {
						pinctrl-single,pins = <
							GPIO39 AF1
						>;
						DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				/* no pull, no LPM */
				sdh3_pmx_func1: sdh3_pmx_func1 {
					pinctrl-single,pins = <
						ND_IO7 AF1
						ND_IO6 AF1
						ND_IO5 AF1
						ND_IO4 AF1
						ND_IO3 AF1
						ND_IO2 AF1
						ND_IO1 AF1
						ND_IO0 AF1
						ND_CLE_SM_OEN AF1
					>;
					MFP_DEFAULT;
				};

				/* MFP_LPM_DRIVE_LOW */
				sdh3_pmx_func2: sdh3_pmx_func2 {
					pinctrl-single,pins = <
						SM_SCLK AF1
					>;
					MFP_LPM_DRIVE_LOW;
				};

				/* ds fast, no pull, no LPM */
				sdh3_pmx_func1_fast: sdh3_pmx_func1_fast {
					pinctrl-single,pins = <
						ND_IO7 AF1
						ND_IO6 AF1
						ND_IO5 AF1
						ND_IO4 AF1
						ND_IO3 AF1
						ND_IO2 AF1
						ND_IO1 AF1
						ND_IO0 AF1
						ND_CLE_SM_OEN AF1
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_NONE;
				};

				/* ds fast, LPM_DRIVE_LOW */
				sdh3_pmx_func2_fast: sdh3_pmx_func2_fast {
					pinctrl-single,pins = <
						SM_SCLK AF1
					>;
					DS_FAST;PULL_NONE;EDGE_NONE;LPM_DRIVE_LOW;
				};

				gnss_pmx_def1: gnss_pmx_def1 {
					pinctrl-single,pins = <
						ND_IO11 AF1
						ND_IO12 AF1
						ND_IO13 AF1
						ND_IO15 AF1
					>;
					MFP_LPM_PULL_DW;
				};

				gnss_pmx_def2: gnss_pmx_def2 {
					pinctrl-single,pins = <
						ND_IO14 AF0
					>;
					MFP_LPM_FLOAT;
				};

				gnss_pmx_power_on: gnss_pmx_power_on {
					pinctrl-single,pins = <
						ND_IO11 AF5
						ND_IO12 AF5
						ND_IO13 AF5
						ND_IO14 AF5
						ND_IO15 AF5
					>;
					MFP_DEFAULT;
				};

				uart2_pmx_func1: uart2_pmx_func1 {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					MFP_DEFAULT;
				};

				uart2_pmx_func2: uart2_pmx_func2 {
					pinctrl-single,pins = <
						GPIO48 AF6
					>;
					MFP_DEFAULT;
				};

				uart2_pmx_func1_sleep: uart2_pmx_func1_sleep {
					pinctrl-single,pins = <
						GPIO47 AF6
					>;
					DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				uart3_pmx_func: uart3_pmx_func {
					pinctrl-single,pins = <
						GPIO45 AF1
						GPIO46 AF1
					>;
					MFP_DEFAULT;
				};

				keypad_in_func: keypad_in_func {
					pinctrl-single,pins = <
						GPIO16 AF1	/* GPIO016_KP_DKIN1 */
						GPIO17 AF1	/* GPIO017_KP_DKIN2 */
					>;
					DS_MEDIUM;PULL_UP;EDGE_NONE;LPM_DRIVE_HIGH;
				};

				gps_pmx_reset: gps_pmx_reset {
					pinctrl-single,pins = <
						GPIO12 AF0
					>;
					DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_NONE;
				};
				gps_pmx_eclk: gps_pmx_eclk {
					/* eclk */
					pinctrl-single,pins = <
						0x0124 0x6
					>;
					MFP_DEFAULT;
				};

				gps_pmx_gpio: gps_pmx_gpio {
					/* gpio18 */
					pinctrl-single,pins = <
						0x0124 0x0
					>;
					MFP_DEFAULT;
				};

				spi1_pmx_func: spi1_pmx_func {
					/*
					 * Since spi isn't used on DKB, set spi
					 * mfp pin to gpio and set the mfp's
					 * config to MFP_DEFAULT to avoid power
					 * leakage. To enable spi, below config
					 * should be modified as below:
					 * GPIO33 AF2
					 * GPIO34 AF2
					 * GPIO35 AF2
					 * GPIO36 AF2
					 * DS_MEDIUM;PULL_DOWN;EDGE_NONE;LPM_NONE;
					 */
					pinctrl-single,pins = <
						GPIO33 AF0 /* GPIO33 SSP0_CLK */
						GPIO34 AF0 /* GPIO34 SSP0_FRM */
						GPIO35 AF0 /* GPIO35 SSP0_RX */
						GPIO36 AF0 /* GPIO36 SSP0_TX */
					>;
					MFP_DEFAULT;
				};

				ccic1_pmx_func1: ccic1_pmx_func1 {
					pinctrl-single,pins = <
						GPIO77 AF1
						GPIO67 AF5
						GPIO68 AF5
					>;
					MFP_DEFAULT;
				};

				ccic1_pmx_func2: ccic1_pmx_func2 {
					pinctrl-single,pins = <
						GPIO51 AF7
						GPIO52 AF7
					>;
					MFP_LPM_FLOAT;
				};
				ccic2_pmx_func1: ccic2_pmx_func1 {
					pinctrl-single,pins = <
						GPIO77 AF1
						GPIO69 AF5
						GPIO70 AF5
					>;
					MFP_DEFAULT;
				};

				ccic2_pmx_func2: ccic2_pmx_func2 {
					pinctrl-single,pins = <
						GPIO53 AF7
						GPIO54 AF7
					>;
					MFP_LPM_FLOAT;
				};

				twsi0_pmx_func: twsi0_pmx_func {
					/* gpio79/80: AF1 */
					pinctrl-single,pins = <
						GPIO79 0x1
						GPIO80 0x1
					>;
					MFP_LPM_FLOAT;
				};
				twsi0_pmx_gpio: twsi0_pmx_gpio {
					pinctrl-single,pins = <
						GPIO79 AF0
						GPIO80 AF0
					>;
					MFP_LPM_FLOAT;
				};
				twsi1_pmx_func: twsi1_pmx_func {
					/* gpio87/88: AF5 */
					pinctrl-single,pins = <
						GPIO87 0x5
						GPIO88 0x5
					>;
					MFP_LPM_FLOAT;
				};
				twsi1_pmx_gpio: twsi1_pmx_gpio {
					pinctrl-single,pins = <
						GPIO87 AF0
						GPIO88 AF0
					>;
					MFP_LPM_FLOAT;
				};

				twsi3_pmx_func: twsi3_pmx_func {
					/* gpio73/74: AF5 */
					pinctrl-single,pins = <
						0x1d0 0x5
						0x1d4 0x5
					>;
					MFP_LPM_FLOAT;
				};
				twsi3_pmx_gpio: twsi3_pmx_gpio {
					pinctrl-single,pins = <
						GPIO73 AF0
						GPIO74 AF0
					>;
					MFP_LPM_FLOAT;
				};
				pm830_pmx_func1: pm830_pmx_func1 {
					pinctrl-single,pins = <
						GPIO29 AF0
					>;
					MFP_DEFAULT;
				};
				pm830_pmx_func1_sleep: pm830_pmx_func1_sleep {
					pinctrl-single,pins = <
						GPIO29 AF0
					>;
					DS_MEDIUM;PULL_NONE;EDGE_BOTH;LPM_NONE;
				};

				touch_pins: touch_pins {
					pinctrl-single,pins = <
						GPIO72 0x0
						GPIO75 0x0
					>;
					MFP_LPM_FLOAT;

				};
				pm830_pmx_leds: pm830_pmx_leds {
					pinctrl-single,pins = <
						GPIO19 AF0	/* PA_EN */
						GPIO95 AF0	/* FLASH_EN */
					>;
					MFP_LPM_FLOAT;
				};
				pm830_bat_det: pm830_bat_det {
					pinctrl-single,pins = <
						GPIO31 AF0	/* BAT_DET */
					>;
					MFP_LPM_PULL_DW;
				};
				m9250_irq_pin: m9250_irq_pin {
					pinctrl-single,pins = <
					ND_IO10 AF1
					>;
					MFP_LPM_PULL_DW;
				};
				sspa0_gpio: sspa0_gpio {
					pinctrl-single,pins = <
						GPIO21 AF0
						GPIO22 AF0
						GPIO23 AF0
						GPIO24 AF0
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_FLOAT;
				};
				sspa0_func: sspa0_func {
					pinctrl-single,pins = <
						GPIO21 AF7
						GPIO22 AF7
						GPIO23 AF7
						GPIO24 AF7
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_NONE;
				};
				sspa1_func: sspa1_func {
					pinctrl-single,pins = <
						GPIO25 AF7
						GPIO26 AF7
						GPIO27 AF7
						GPIO28 AF7
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_NONE;
				};
				disp_func: disp_func {
					pinctrl-single,pins = <
						GPIO4 AF0
						GPIO6 AF0
						GPIO32 AF0
					>;
					MFP_LPM_PULL_DW;
				};
				/* no pull, no LPM */
				dvc_pmx_func: dvc_pmx_func {
					pinctrl-single,pins = <
						GPIO93 AF5
						GPIO94 AF5
					>;
					MFP_DEFAULT;
				};
				gssp_func: gssp_func {
					pinctrl-single,pins = <
						GPIO25 AF1
						GPIO26 AF1
						GPIO27 AF1
						GPIO28 AF1
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_NONE;
				};
				gssp_gpio: gssp_gpio {
					pinctrl-single,pins = <
						GPIO25 AF0
						GPIO26 AF0
						GPIO27 AF0
						GPIO28 AF0
					>;
					DS_MEDIUM;PULL_NONE;EDGE_NONE;LPM_FLOAT;
				};

				led_pmx_func: led_pmx_func {
					pinctrl-single,pins = <
						/* LED_R_CTRL */
						DF_nCS1_SM_nCS3 AF1
						/* LED_G_CTRL */
						SM_nCS0 AF1
						/* LED_B_CTRL */
						SM_nCS1 AF1
					>;
					MFP_LPM_PULL_DW;
				};
			};

			twsi0: i2c@d4011000 {
				pinctrl-names = "default","gpio";
				pinctrl-0 = <&twsi0_pmx_func>;
				pinctrl-1 = <&twsi0_pmx_gpio>;
				i2c-gpio = <&gpio 79 0 &gpio 80 0>;
				status = "okay";

				sensor1: apds9930@39 {
					compatible = "avago,apds9930";
					reg = <0x39>;
					interrupt-parent = <&gpio>;
					interrupts = <14 0x1>;
					irq-gpios = <&gpio 14 0>;
					avdd-supply = <&ldo10>;
				};
			};

			twsi1: i2c@d4010800 {
				pinctrl-names = "default","gpio";
				pinctrl-0 = <&twsi1_pmx_func>;
				pinctrl-1 = <&twsi1_pmx_gpio>;
				i2c-gpio = <&gpio 87 0 &gpio 88 0>;
				status = "okay";

				board_eeprom: 24aa025t {
					compatible = "at24,24c02";
					reg = <0x50>;
				};

				touch1: s3202@720p {
					compatible = "synaptics,s3202-touch";
					pinctrl-names = "default"; pinctrl-0 = <&touch_pins>;
					reg = <0x22>;
					interrupt-parent = <&gpio>;
					interrupts = <72 0x1>;
					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					synaptics,irq-flags =  <0x2002>;
					synaptics,irq-gpios = <&gpio 72 0>;
					synaptics,reset-gpios = <&gpio 75 0>;
					synaptics,sensor_res_x = <720>;
					synaptics,sensor_res_y = <1280>;
					synaptics,sensor_max_x = <798>;
					synaptics,sensor_max_y = <1392>;
					synaptics,sensor_margin_x = <39>;
					synaptics,sensor_margin_y = <0>;
					avdd-supply = <&ldo10>;
				};

				touch2: s3202@1080p {
					compatible = "synaptics,s3202-touch";
					pinctrl-names = "default"; pinctrl-0 = <&touch_pins>;
					reg = <0x22>;
					interrupt-parent = <&gpio>;
					interrupts = <72 0x1>;
					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					synaptics,irq-flags =  <0x2002>;
					synaptics,irq-gpios = <&gpio 72 0>;
					synaptics,reset-gpios = <&gpio 75 0>;
					synaptics,sensor_res_x = <1080>;
					synaptics,sensor_res_y = <1920>;
					synaptics,sensor_max_x = <1080>;
					synaptics,sensor_max_y = <2070>;
					synaptics,sensor_margin_x = <0>;
					synaptics,sensor_margin_y = <0>;
					avdd-supply = <&ldo10>;
				};

			};

			twsi2: i2c@d4037000 {
				status = "okay";

				pmic1: 88pm822@30 {
					compatible = "marvell,88pm800";
					reg = <0x30>;
					interrupts = <0 4 0x4>;
					interrupt-parent = <&gic>;
					interrupt-controller;
					#interrupt-cells = <1>;
					marvell,88pm800-irq-write-clear;

					marvell,88pm800-power-page-addr = <0x31>;
					marvell,88pm800-gpadc-page-addr = <0x32>;

					regulators {
						compatible = "marvell,88pm80x-regulator";

						BUCK1 {
							regulator-compatible = "88PM800-BUCK1";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <1800000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK2 {
							regulator-compatible = "88PM800-BUCK2";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK3 {
							regulator-compatible = "88PM800-BUCK3";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK4 {
							regulator-compatible = "88PM800-BUCK4";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						BUCK5 {
							regulator-compatible = "88PM800-BUCK5";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <3950000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO1 {
							regulator-compatible = "88PM800-LDO1";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO2 {
							regulator-compatible = "88PM800-LDO2";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO3 {
							regulator-compatible = "88PM800-LDO3";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						ldo4: LDO4 {
							regulator-compatible = "88PM800-LDO4";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo5: LDO5 {
							regulator-compatible = "88PM800-LDO5";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						LDO6 {
							regulator-compatible = "88PM800-LDO6";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						LDO7 {
							regulator-compatible = "88PM800-LDO7";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						ldo8: LDO8 {
							regulator-compatible = "88PM800-LDO8";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
							regulator-boot-on;
							regulator-always-on;
						};
						LDO9 {
							regulator-compatible = "88PM800-LDO9";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo10: LDO10 {
							regulator-compatible = "88PM800-LDO10";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo11: LDO11 {
							regulator-compatible = "88PM800-LDO11";
							regulator-min-microvolt = <1200000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo12: LDO12 {
							regulator-compatible = "88PM800-LDO12";
							regulator-min-microvolt = <600000>;
							regulator-max-microvolt = <1500000>;
						};
						ldo13: LDO13 {
							regulator-compatible = "88PM800-LDO13";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <3300000>;
						};
						ldo14: LDO14 {
							regulator-compatible = "88PM800-LDO14";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <2800000>;
						};
						voutsw: VOUTSW {
							regulator-compatible = "88PM800-VOUTSW";
							regulator-min-microvolt = <1700000>;
							regulator-max-microvolt = <1800000>;
						};
					};

					vibrator: vibrator {
						compatible = "marvell,88pm80x-vibrator";
						min-timeout = <10>;
						duty-cycle = <0x3f>;
					};

					headset {
						compatible = "marvell,88pm80x-headset";
						marvell,switch-name = "h2w";
						marvell,headset-flag = <1>;
						marvell,hook-press-th = <60>;
						marvell,vol-up-press-th = <250>;
						marvell,vol-down-press-th = <500>;
						marvell,mic-det-th = <600>;
						marvell,press-release-th = <600>;
						marvell,micbias-supply = <&ldo14>;
					};

					dvc {
						compatible = "marvell,88pm8xx-dvc";
						/* pm822 dvc affect buck1/3/5, affected 32bit = (1 << 4) | (1 << 2) | (1 << 0)*/
						dvc-affected-buckbits = <21>;
						pinctrl-names = "default";
						pinctrl-0 = <&dvc_pmx_func>;
					};
				};
				pmic2: 88pm860@38 {
					compatible = "marvell,88pm860";
					reg = <0x38>;
					/* no codec_int currently, comment out now */
					/*
					interrupt-parent = <&gpio>;
					interrupts = <124 0x1>;
					marvell,88pm805-irq-write-clear;
					*/
					pm860_codec: pm860_codec {
						compatible = "marvell,88pm860-codec";
						#dailink-cells = <1>;
					};
				};

				pmic3: 88pm830@68 {
					compatible = "marvell,88pm830";

					pinctrl-names = "default", "sleep";
					pinctrl-0 = <&pm830_pmx_func1 &pm830_pmx_leds &pm830_bat_det>;
					pinctrl-1 = <&pm830_pmx_func1_sleep &pm830_pmx_leds &pm830_bat_det>;
					edge-wakeup-gpio = <29>; /* GPIO29: interrupt line */

					reg = <0x68>;
					interrupt-parent = <&gpio>;
					interrupt-controller;
					/* edge falling */
					interrupts = <29 2>;
					#interrupt-cells = <1>;

					/* IRQF_ONESHOT | IRQF_TRIGGER_FALLING */
					marvell,88pm830-irq-flags =  <0x2002>;

					charger {
						compatible = "marvell,88pm830-chg";
						prechg-current = <100>;	/* mA */
						prechg-voltage = <3300>; /* mV */
						prechg-timeout = <32>; /* minute */

						fastchg-eoc = <60>; /* mA */
						fastchg-voltage = <4200>; /* mV */
						fastchg-timeout = <8>; /* hour */

						over-voltage = <4300>; /* mV */

						no-thermal-support = <0>;
						thermal-threshold = <0xf 0xf 0x0 0x0>;

						temp-configure = <0x22>;
						temp-threshold = <150>;

						mppt-weight = <0x2>; /* 25% */
						mppt-period = <0x7>; /* 20ms */
						mppt-start-current = <0xf>; /* 1600mA */

					};

					battery {
						compatible = "marvell,88pm830-bat";

						bat-ntc-support = <1>;
						bat-capacity = <1500>;	/* mAh */
						external-resistor = <200>; /* mohm */
						sleep-period = <1000>; /* second */
						low-threshold = <30>; /* % */
						high-threshold = <50>; /* % */
					};

					usb {
						compatible = "marvell,88pm830-vbus";
						gpadc-number = <1>;
					};

					led {
						compatible = "marvell,88pm830-led";

						flash-en-gpio = <95>;
						flash-txmsk-gpio = <19>;
					};
				};
			};

			twsi3: i2c@d4013800 {
				pinctrl-names = "default", "gpio";
				pinctrl-0 = <&twsi3_pmx_func>;
				pinctrl-1 = <&twsi3_pmx_gpio>;
				i2c-gpio = <&gpio 73 0 &gpio 74 0>;
				status = "okay";

				sensor2: bmp18x@77 {
					compatible = "BOSCH,bmp18x";
					reg = <0x77>;
					avdd-supply = <&ldo10>;
				};

				sensor3: mpu9250@69 {
					compatible = "invensense,mpu9250";
					pinctrl-names = "default";
					pinctrl-0 = <&m9250_irq_pin>;
					reg = <0x69>;
					interrupt-parent = <&gpio>;
					interrupts = <65 IRQ_TYPE_EDGE_FALLING>;
					inven,irq-gpios = <&gpio 65 0x00>;
					avdd-supply = <&ldo10>;
					axis_map_x = <0>;
					negate_x = <0>;
					axis_map_y = <4>;
					negate_y = <0>;
					axis_map_z = <8>;
					negate_z = <0>;
					inven,secondary_axis_map_x = <0>;
					inven,secondary_negate_x = <0>;
					inven,secondary_axis_map_y = <4>;
					inven,secondary_negate_y = <0>;
					inven,secondary_axis_map_z = <8>;
					inven,secondary_negate_z = <0>;
					inven,secondary_type = "compass";
					inven,secondary_name = "ak8963";
					inven,secondary_reg = <0xc>;
				};
			};

			acipc: acipc@d401d000 {
				status = "okay";
			};

			seh: seh@d4080000 {
				compatible = "mrvl,seh";
				reg = <0xd4080000 0x100>;
				interrupts = <0 32 0x4>;
				interrupt-names = "CP_TIMER2_3";
				watchdog-type = <1>; /* soc timer */
				timer-num = <2>; /* timer num */
				match-num = <0>; /* match num */
				status = "okay";
			};
		};

		sram: sram@0xd1004000 {
			status = "okay";
		};

		mcam0:mcam@0 {
			pwdn-gpios = <&gpio 80 0>;
			reset-gpios = <&gpio 67 0>;
			af_2v8-supply = <&ldo10>;
			avdd_2v8-supply = <&ldo11>;
			dovdd_1v8-supply = <&voutsw>;
			dvdd_1v2-supply = <&ldo12>;
			dphy_val = <0xff1d00 0x00024733 0x04001001>;
			status = "disable";
		};

		mcam1:mcam@1 {
			pwdn-gpios = <&gpio 70 0>;
			reset-gpios = <&gpio 69 0>;
			af_2v8-supply = <&ldo10>;
			avdd_2v8-supply = <&ldo11>;
			dovdd_1v8-supply = <&voutsw>;
			dvdd_1v2-supply = <&ldo12>;
			dphy_val = <0x1806 0x00011 0xe00>;
			status = "okay";
		};

		soc-camera@0 {
			status = "okay";
		};

		soc-camera@1 {
			status = "okay";
		};

		/*
		 * ramoops:
		 * 256 KB memory starts at 0x8100000
		 * pstore dump: 2 chunks, totall 64 KB, 32 KB each
		 * console size: 192 KB
		 * no dump_oops
		 */
		ramoops {
			compatible = "pstore,ramoops";
			mem-size = <0x40000>;
			mem-address = <0x8100000>;
			record-size = <0x8000>;
			console-size = <0x30000>;
			dump-oops = <0>;
			status = "okay";
		};
	};

	mmp_pcm_hostless: mmp_pcm_hostless {
		bus_number = <0>;
		compatible = "marvell,mmp-pcm-hostless";
		#dailink-cells = <1>;
		status = "okay";
	};

	snd_soc_dummy: snd_soc_dummy {
		compatible = "snd-soc-dummy";
		#dailink-cells = <1>;
		status = "okay";
	};

	sound {
		compatible = "marvell,map-card";
		map,dapm-route =
			"ADC input1", "TDM_MIC1_CAP",
			"ADC input2", "TDM_MIC2_CAP",
			"ADC input3", "BT_VC_UL",
			"TDM_OUT1_PLAYBACK", "DAC1 output out1",
			"TDM_OUT2_PLAYBACK", "DAC2 output out2",
			"BT_VC_DL", "ADC output ain3";
		fe_i2s1: fe_i2s1 {
			compatible = "marvell,map-dailink-1";
			dai-name = "MAP I2S1 audio";
			stream-name = "map i2s1";
			marvell,cpu-dai = <&sspa0 0>;
			marvell,codec-dai = <&mmp_map_codec 4>;
			marvell,dai-dynamic;
		};
		fe_i2s3: fe_i2s3 {
			compatible = "marvell,map-dailink-2";
			dai-name = "MAP I2S2 audio";
			stream-name = "map i2s2";
			marvell,cpu-dai = <&mmp_pcm_hostless 0>;
			marvell,codec-dai = <&mmp_map_codec 2>;
			marvell,dai-dynamic;
			marvell,dai-no-host-mode;
		};
		fe_i2s4: fe_i2s4 {
			compatible = "marvell,map-dailink-1";
			dai-name = "MAP I2S3 audio";
			stream-name = "map i2s3";
			marvell,cpu-dai = <&mmp_pcm_hostless 0>;
			marvell,codec-dai = <&mmp_map_codec 3>;
			marvell,dai-dynamic;
			marvell,dai-no-host-mode;
		};
		be_i2s1: be_i2s1 {
			compatible = "marvell,map-dailink-3";
			dai-name = "MAP AUXI2S audio";
			stream-name = "BT audio";
			marvell,cpu-dai = <&mmp_map_be 1>;
			marvell,codec-dai = <&snd_soc_dummy 0>;
			marvell,codec-name = "snd-soc-dummy";
			marvell,codec-dai-name = "snd-soc-dummy-dai";
			marvell,dai-no-pcm;
			marvell,dai-fixup = <0>;
		};
		be_i2s2: be_i2s2 {
			compatible = "marvell,map-dailink-6";
			dai-name = "MAP TDM hs audio";
			stream-name = "codec hs audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 1>;
			marvell,codec-dai = <&pm860_codec 3>;
			marvell,dai-no-pcm;
			marvell,dai-fixup = <1>;
		};
		be_i2s3: be_i2s3 {
			compatible = "marvell,map-dailink-4";
			dai-name = "MAP TDM speaker audio";
			stream-name = "codec speaker audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 2>;
			marvell,codec-dai = <&pm860_codec 4>;
			marvell,dai-no-pcm;
			marvell,dai-fixup = <1>;
		};
		be_i2s4: be_i2s4 {
			compatible = "marvell,map-dailink-5";
			dai-name = "MAP TDM mic1 audio";
			stream-name = "codec mic1 audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 3>;
			marvell,codec-dai = <&pm860_codec 1>;
			marvell,dai-no-pcm;
		};
		be_i2s5: be_i2s5 {
			compatible = "marvell,map-dailink-5";
			dai-name = "MAP TDM mic2 audio";
			stream-name = "codec mic2 audio";
			marvell,cpu-dai = <&mmp_map_be_tdm 4>;
			marvell,codec-dai = <&pm860_codec 2>;
			marvell,dai-no-pcm;
		};
	};

	ion {
		marvell,ion-nr = <2>;
		marvell,ion-iommu = <1>;
		marvell,ion-extra-pages = <0>;
		status = "okay";
		heap1 {
			marvell,ion-name = "carveout_heap";
			marvell,ion-type = <2>;
			marvell,ion-id = <2>;
			marvell,ion-base = <0x09000000>;
			marvell,ion-size = <0x01000000>;
		};
		heap2 {
			marvell,ion-name = "system_heap";
			marvell,ion-type = <0>;
			marvell,ion-id = <0>;
		};
	};

	panel: td043mgea1 {
		compatible = "marvell,mmp-td043mgea1";
		marvell,path-name = "mmp_pnpath";
		status = "okay";
	};

	plat_cam {
		status = "okay";
		backsensor {
			compatible = "marvell,backsensor";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
			OV13850: sensor@1 {
				compatible = "marvell,ov13850","marvell,sensor";
				pinctrl-names = "default";
				pinctrl-0 = <&ccic1_pmx_func1 &ccic1_pmx_func2>;
				sensor-name = "ovt,ov13850";
				reg = <0x10>;
				adapter = <0x1>;
				status = "okay";
				sensor-pos = <1>;
				mclk = <26000000>;
				dphy3 = <0x1500>;
				dphy5 = <0xff>;
				dphy6 = <0x1001>;
				af_2v8-supply = <&ldo10>;
				avdd_2v8-supply = <&ldo11>;
				dovdd_1v8-supply = <&voutsw>;
				dvdd_1v2-supply = <&ldo12>;
				sensor_power {
					pwdn-gpios = <&gpio 68 0>;
					reset-gpios = <&gpio 67 0>;
					pwdn-validvalue = <0>;
					reset-validvalue = <0>;
				};
			};
		};
	};

	b52isp_sc2_csi0 {
		status = "disabled";
	};
	b52isp_sc2_csi1 {
		status = "disabled";
	};
	b52isp_sc2_dma0 {
		status = "disabled";
	};
	b52isp_sc2_dma1 {
		status = "disabled";
	};

	sd8x-rfkill {
		sd-host = <&sdh2>;
		pd-gpio = <&gpio 7 0>;
		rst-gpio = <&gpio 71 0>;
		3v3-ldo-gpio = <&gpio 20 0>;
		edge-wakeup-gpio = <&gpio 39 0>;
		status = "disabled";
	};

	sd8xxx-wlan {
		drv_mode = <0x5>;
		cfg80211_wext = <0xc>;
		sta_name = "wlan";
		wfd_name = "p2p";
		max_vir_bss = <1>;
		drvdbg = <0x80007>;
		dev_cap_mask = <0xffffcfff>;
		init_cfg = "mrvl/wifi_init_cfg.conf";
		reg_alpha2 = "US";
		p2p_enh = <1>;
	};

	sd8xxx-bt {
		init_cfg = "mrvl/bt_init_cfg.conf";
	};

        mmp-m3 {
		compatible = "marvell,mmp-m3";
		vm3pwr-supply = <&ldo13>;

		pinctrl-names = "default", "poweron";
		pinctrl-0 = <&gnss_pmx_def1 &gnss_pmx_def2>;
		pinctrl-1 = <&gnss_pmx_power_on>;
		status = "okay";
	};

	gps: mmp-gps {
		compatible = "marvell,mmp-gps";
		marvell,gps-eclk-ctrl;

		vgps-supply = <&ldo13>;

		pinctrl-names = "default", "idle";
		pinctrl-0 = <&gps_pmx_eclk &gps_pmx_reset>;
		pinctrl-1 = <&gps_pmx_gpio>;

		on-off-gpio = <&gpio 96 0>;
		reset-n-gpio = <&gpio 12 0>;
	};

	led-rgb {
		compatible = "marvell,led-rgb";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pmx_func>;
		led_r = <&gpio 102 0>;
		led_g = <&gpio 103 0>;
		led_b = <&gpio 104 0>;
		status = "okay";
	};

	board-thermal {
		compatible = "marvell,gpadc-thermal";
		status = "okay";
	};

	smc91x: smc91x@80000300 {
		compatible = "smsc,lan91c111";
		reg = <0x0 0x80000300 0xffcff>;
		interrupts = <0 63 0x1>;
		rst_gpio = <&gpio 3 0>;
		clksrc = "smc91x";
		status = "okay";
	};
};
